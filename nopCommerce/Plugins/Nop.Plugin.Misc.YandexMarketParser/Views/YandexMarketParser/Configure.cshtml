@{
    Layout = "";

    Html.AddCssFileParts("~/Plugins/Misc.YandexMarketParser/Content/styles.css");  
}
@model YandexMarketParserModel
@using Nop.Plugin.Misc.YandexMarketParser.Models;
@using Nop.Web.Framework;

@using Nop.Core.Infrastructure;
@using Nop.Web.Framework.UI
@using Telerik.Web.Mvc.UI

@using (Html.BeginForm())
{
    @Html.Telerik().TabStrip().Name("googlebase-configure").Items(x =>
    {
        x.Add().Text("Основное").Content(TabGeneral().ToHtmlString()).Selected(true);
        x.Add().Text("Категории").Content(TabCategory().ToHtmlString());
    })   
}


@helper TabGeneral()
{
    <div>ver___2    </div>
    <table style="width: 100%;">
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.CategoryId):
            </td>
            <td class="adminData">
                @Html.DropDownListFor(model => model.CategoryId, Model.AvailableCategories)
                @Html.ValidationMessageFor(model => model.CategoryId)
            </td>
        </tr>

        <tr>
            <td>
                @Html.NopLabelFor(model => model.ProductList, false)

                @foreach (var currentProduct in Model.ProductList)
                {
                    <div>@currentProduct.ToString()</div>
@*<p> <img src="@currentProduct.ImageUrl_1"/> </p>*@
                }

            </td>

        </tr>

        <tr>
            <td colspan="2">
                <div>
                    @Html.LabelFor(model => model.ParseNotMoreThen) :
                    @Html.EditorFor(model => model.ParseNotMoreThen)
                </div>
                <div>
                    @Html.CheckBoxFor(model => model.IsTest)
                    @Html.LabelFor(model => model.IsTest)
                </div>
                <input type="submit" name="Parse" class="t-button" value="Parse" />
            </td>
        </tr>
    </table>
}

@helper TabCategory()
{
    <table class="adminContent">
        <tr>
            <td>
                @* ReSharper disable ConvertToLambdaExpression *@
                @{
                    var routeDictionaryForGrid = new RouteValueDictionary() { { "Namespaces", "Nop.Plugin.Misc.YandexMarketParser.Controllers" }, { "area", "" } };
                    var controllerNameForGrid = "YandexMarketCategory";
                       
                }
                @(Html.Telerik().Grid<YandexMarketCategoryModel>().Name("YandexMarketCategory-grid").DataKeys(keys => keys.Add(x => x.Id).RouteKey("Id")).Columns(columns =>
                      {
                          columns.Bound(x => x.Name).Width(200);
                          columns.Command(commands =>
                              {
                                  commands.Edit().Text("Редактировать");
                                  commands.Delete().Text("Удалить");
                              }).Width(180);

                      }).Editable(x =>
                          { x.Mode(GridEditMode.InLine); }).DataBinding(dataBinding =>
                              {
                                  dataBinding.Ajax()
                                             .Select("ListCategory", controllerNameForGrid, new RouteValueDictionary() { { "Namespaces", "Nop.Plugin.Misc.YandexMarketParser.Controllers" }, { "area", "" } })
                                             .Update("UpdateCategory", controllerNameForGrid, new RouteValueDictionary() { { "Namespaces", "Nop.Plugin.Misc.YandexMarketParser.Controllers" }, { "area", "" } })
                                             .Delete("DeleteCategory", controllerNameForGrid, new RouteValueDictionary() { { "Namespaces", "Nop.Plugin.Misc.YandexMarketParser.Controllers" }, { "area", "" } });
                              })
                      .Pageable(settings => settings.PageSize(15).Position(GridPagerPosition.Both)).EnableCustomBinding(true))
                @* ReSharper restore ConvertToLambdaExpression *@

            </td>
        </tr>
    </table>
    
    <table class="adminContent">
        <tr>
            <td class="adminTitle">
                @Html.NopLabelFor(model => model.AddCategoryName):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.AddCategoryName)
                @Html.ValidationMessageFor(model => model.AddCategoryName)
            </td>
        </tr>

        <tr>
            <td colspan="2" align="left">
                <input type="button" id="add" class="t-button" value="Добавить" />
            </td>
        </tr>
    </table>
    
    <script type="text/javascript">
        $(function () {
            $('#add').click(function () {
                $.ajax({
                    cache: false,
                    type: 'POST',
                    url: '@Url.RouteUrl("Plugin.Misc.YandexMarketParser.Category.Add")',
                    data: $(this.form).serialize(),
                    dataType: 'json',
                    success: function (data) {
                        var grid = $("#YandexMarketCategory-grid");
                        grid.data('tGrid').ajaxRequest();
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        alert('Failed to add record.');
                    }
                });
                return false;
            });
        });
    </script>
    
}